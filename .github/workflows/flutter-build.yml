name: Flutter Android Build

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      FLUTTER_VERSION: '3.22.2' # Using the latest stable version as of June 2025

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # Use latest version of checkout

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true # NEW: This enables caching for Flutter SDK itself

      - name: Cache Pub dependencies
        uses: actions/cache@v4
        with:
          path: ${{ env.PUB_CACHE }}
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Install dependencies
        run: flutter pub get
        
      - name: Analyze code
        run: flutter analyze

      - name: Run tests
        run: flutter test

      # Your NDK setup is very specific. While there are simpler ways (see note below),
      # we will keep your existing logic for now.
      # ────────────────────────────────────────────────────────────────
      # ANDROID NDK & SDK SETUP
      # ────────────────────────────────────────────────────────────────
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Patch Gradle to force NDK
        run: |
          sed -i '/android {/a \        ndkVersion = "25.2.9519653"' android/app/build.gradle

      # ────────────────────────────────────────────────────────────────
      # BUILD THE APK
      # ────────────────────────────────────────────────────────────────
      - name: Build release APK
        run: flutter build apk --release

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: flutter-release-apk
          path: build/app/outputs/flutter-apk/app-release.apk